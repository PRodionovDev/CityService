openapi: 3.0.1
info:
  title: API City Service - OpenAPI 3.0
  description: |-
    This is a sample City Service Server based on the OpenAPI 3.0 specification.  You can find out more about
    Swagger at [https://swagger.io](https://swagger.io).

    Some useful links:
    - [The City Service repository](github.com/PRodionovDev/CityService)
  version: 1.0.12
servers:
  - url: http://localhost:8080
tags:
  - name: city
    description: Cities from Russian Federation
  - name: regions
    description: Regions from Russian Federation
paths:
  /cities:
    get:
      tags:
        - city
      summary: Get all cities
      description: Get all cities
      operationId: getAllCity
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/City'
  /city:
    post:
      tags:
        - city
      summary: Create city.
      description: Create City.
      operationId: createCity
      requestBody:
        description: Created city object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/City'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/City'
  /city/{id}:
    get:
      tags:
        - city
      summary: Get city by id.
      operationId: getCityById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/City'
    put:
      tags:
        - city
      summary: Update city resource.
      operationId: updateCity
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/City'
      responses:
        '200':
          description: successful operation
    delete:
      tags:
        - city
      summary: Delete city resource.
      operationId: deleteCity
      parameters:
        - name: id
          in: path
          description: The ID that needs to be deleted
          required: true
          schema:
            type: string
      responses:
        '200':
          description: City deleted
  /regions:
    get:
      tags:
        - region
      summary: Get all regions
      description: Get all regions
      operationId: getAllRegion
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Region'
  /region:
    post:
      tags:
        - region
      summary: Create region.
      description: Create region.
      operationId: createRegion
      requestBody:
        description: Created region object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Region'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Region'
  /region/{id}:
    get:
      tags:
        - region
      summary: Get region by id.
      operationId: getRegionById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Region'
    put:
      tags:
        - region
      summary: Update region resource.
      operationId: updateRegion
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Region'
      responses:
        '200':
          description: successful operation
    delete:
      tags:
        - region
      summary: Delete region resource.
      operationId: deleteRegion
      parameters:
        - name: id
          in: path
          description: The ID that needs to be deleted
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Region deleted
components:
  schemas:
    City:
      required:
        - name
        - slug
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        name:
          type: string
          example: Москва
        slug:
          type: string
          example: moscow
    Region:
      required:
        - name
        - slug
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        name:
          type: string
          example: Московская область
        slug:
          type: string
          example: moscow republic
  requestBodies:
    City:
      description: City object that needs to be added to the db
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/City'
    CityArray:
      description: List of city object
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/City'
    Region:
      description: Region object that needs to be added to the db
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Region'
    RegionArray:
      description: List of region object
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Region'
